
# Standard-application configuration, the values can be overwritten in the file akkabatch.conf which must be passed as
# first program argument

com.sothawo.akkabatch {

    # which modules should be started?
    modules {

        # Master contains Reader and Writer, ca only run once in a network
        master = true

        # Worker cpontains CSV2Record und RecordModifier
        worker = true
    }

    # several times
    times {
        # maximum time the program is allowed to run in seconds
        maxRunDuration = 3600

        # intervall in which CSV2Record actors register again with the reader in seconds
        registerIntervall = 1
    }

    # encoding of in- and output files
    charset.infile = iso-8859-1
    charset.outfile = iso-8859-1

    # number of records that are allowed in the system at a given point in time
    numRecords.inSystem = 50000

    names {
        akka.system = "AkkaBatch"

        writer = "Writer"
        writerRef = /user/Writer

        reader = "Reader"
        readerRef = /user/Reader

        recordModifier = "RecordModifier"
        recordModifierRef = /user/RecordModifier

        csv2Record = "CSV2Record"
        csv2RecordRef = /user/CSV2Record
    }

    simulation {
        # how many records per 100 are dropped by a RecordModifier
        recordModifier.droprate = 0

        # number of fionacci number to be calculated
        fibonacci = 10000

        # simulated io pause
        threadsleep = 20
    }
}

# Akka Konfiguration
akka {
	loglevel = "INFO"
    log-dead-letters = 20
    log-dead-letters-during-shutdown = off

    actor {
        provider = "akka.remote.RemoteActorRefProvider"
    }

    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        netty.tcp {
            hostname = ${com.sothawo.akkabatch.network.self.host}
            port = ${com.sothawo.akkabatch.network.self.port}
        }
    }

    actor.deployment {
	    /RecordModifier {
		    router = round-robin
		    nr-of-instances = 100
		}
	    /CSV2Record {
		    router = round-robin
		    nr-of-instances = 100
		}
	}
}
